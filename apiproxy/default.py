from sanic import Sanic
from sanic import response

from time import strftime, gmtime

import smoked_rpc

proxy_app = Sanic()

import config

@proxy_app.route('/trending')
async def get_trending(request):
      return response.json(smoked_rpc.get_trending_tags('',100))

@proxy_app.route('/blocks')
async def get_recent_blocks(request):
      pass

@proxy_app.route('/blocks/<block_num>')
async def get_block(request,block_num):
      pass

@proxy_app.route('/witnesses')
async def get_witnesses_list(request):
      witnesses = smoked_rpc.get_witnesses('0',100)
      return response.json(witnesses)

@proxy_app.route('/witness/<witness_name>')
async def get_witness(request,witness_name):
      witness_data = smoked_rpc.get_witness_data(witness_name)
      return response.json(witness_data)

def get_blog_posts(username):
    retval = []
    for p in smoked_rpc.get_discussions_before_date(username,"",strftime('%Y-%m-%dT%H:%M:%S',gmtime()),"10"):
        retval.append({'permlink':p['permlink'],'id':p['id']})
    return retval

@proxy_app.route('/blog/<username>')
async def get_blog(request,username):
      posts = get_blog_posts(username)
      return response.json(posts)

@proxy_app.route('/post/<author>/<post>')
async def get_post(request,author,post):
      pass

@proxy_app.route('/network')
async def get_network_data(request):
      return response.json(smoked_rpc.get_network_data())

@proxy_app.route('/')
async def smoked(request):
      # TODO - replace this with a nifty autogenerated documentation + API explorer thing
      return response.text('This is an API server, read the documentation to use it')

if __name__ == "__main__":
   proxy_app.run(host="0.0.0.0", port=8000)
